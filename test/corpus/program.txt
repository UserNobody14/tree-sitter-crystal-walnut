================================================================================
Initial statements
================================================================================

b = 2
c = 3

--------------------------------------------------------------------------------

    (module
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (number))))
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (number)))))


================================================================================
Initial statements 2
================================================================================

b = 2
c = (a, c) =>
    g = 5
    e = 6

--------------------------------------------------------------------------------

 (module
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (number))))
      (unification
        (expression
          (primary_expression
            (identifier)))
        (predicate_definition
 (argument_definition
            (destructuring_expression
              (identifier)))
 (argument_definition
            (destructuring_expression
              (identifier)))
          (block
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number))))
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number))))))))


================================================================================
Initial statements 3
================================================================================

b = 2
c = (a, c) =>
    g = 5
    e = 6

c = (a, c) =>
    g = 5
    e = 6

--------------------------------------------------------------------------------

 (module
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (number))))
      (unification
        (expression
          (primary_expression
            (identifier)))
        (predicate_definition
 (argument_definition
            (destructuring_expression
              (identifier)))
(argument_definition
            (destructuring_expression
              (identifier)))
          (block
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number))))
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number)))))))
      (unification
        (expression
          (primary_expression
            (identifier)))
        (predicate_definition
 (argument_definition
            (destructuring_expression
              (identifier)))
 (argument_definition
            (destructuring_expression
              (identifier)))
          (block
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number))))
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number))))))))

================================================================================
Initial statements 4
================================================================================

b = 2
c = a[2]
--------------------------------------------------------------------------------

    (module
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (number))))
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (slice
              (primary_expression
                (identifier))
              (expression
                (primary_expression
                  (number))))))))

================================================================================
Initial statements 5
================================================================================

b = 2
chval(...b) and z = 3
c = a[2]
--------------------------------------------------------------------------------

(module
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (number))))
      (statement_binary_operator
        (predicate
          (primary_expression
            (identifier))
          (argument_list
            (splat
              (primary_expression
                (identifier)))))
        (unification
          (expression
            (primary_expression
              (identifier)))
          (expression
            (primary_expression
              (number)))))
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (slice
              (primary_expression
                (identifier))
              (expression
                (primary_expression
                  (number))))))))

================================================================================
Initial statements nominal fresh
================================================================================
fresh nominal a:
  b = 2
  c = a[2]
--------------------------------------------------------------------------------

    (module
      (fresh_statement
        (identifier)
        (block
          (unification
            (expression
              (primary_expression
                (identifier)))
            (expression
              (primary_expression
                (number))))
          (unification
            (expression
              (primary_expression
                (identifier)))
            (expression
              (primary_expression
                (slice
                  (primary_expression
                    (identifier))
                  (expression
                    (primary_expression
                      (number))))))))))


================================================================================
Predicate improvements
================================================================================

b = 2
c = (a, c) => either:
    g = 5
    e = 6

--------------------------------------------------------------------------------

 (module
      (unification
        (expression
          (primary_expression
            (identifier)))
        (expression
          (primary_expression
            (number))))
      (unification
        (expression
          (primary_expression
            (identifier)))
        (predicate_definition
          (argument_definition
                      (destructuring_expression
                        (identifier)))
          (argument_definition
                      (destructuring_expression
                        (identifier)))
          (statement_head
           (either_statement)
          )
          (block
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number))))
            (unification
              (expression
                (primary_expression
                  (identifier)))
              (expression
                (primary_expression
                  (number))))))))


================================================================================
Predicate improvements2
================================================================================

b = 2
c = ([e, ...g], c: number) => either:
    g = 5
    e = 6

--------------------------------------------------------------------------------


    (module
      (unification
        lhs: (expression
          (primary_expression
            (identifier)))
        rhs: (expression
          (primary_expression
            (number))))
      (unification
        lhs: (expression
          (primary_expression
            (identifier)))
        rhs: (predicate_definition
          arguments: (argument_definition
            (destructuring_expression
              (list
                (expression
                  (primary_expression
                    (identifier)))
                (splat
                  (primary_expression
                    (identifier))))))
          arguments: (argument_definition
            (destructuring_expression
              (identifier))
            (type_definition
              (type_application
                (type_identifier))))
          body: (statement_head
          either: (either_statement)
          )
          body: (block
            (unification
              lhs: (expression
                (primary_expression
                  (identifier)))
              rhs: (expression
                (primary_expression
                  (number))))
            (unification
              lhs: (expression
                (primary_expression
                  (identifier)))
              rhs: (expression
                (primary_expression
                  (number))))))))
